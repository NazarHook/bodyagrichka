import axios from 'axios';
import arrowLeftIcon from '../images/icons/sprite.svg';
import arrowRightIcon from '../images/icons/sprite.svg';

const review = [{"_id":1,"author":"–°–∞—à–∏–∫","avatar_url":"./images/bodya/sasha.jpeg","review":"–ë–æ–¥—è –ì—Ä–∏—á–∫–∞ –¢–µ—Ä–º—ñ–Ω–∞—Ç–æ—Ä, –¥—É–∂–µ –∫–ª–∏–ø–æ—É—Ö–∏–π —ñ –¥–æ–±—Ä–∏–π —á–æ–ª–æ–≤—ñ–∫, –ª—é–±–∏—Ç —Å–∏–ª—å–Ω–æ –º–Ω–æ–≥–æ –±–∞–ª–∞–±–æ–ª–∏—Ç–∏ —ñ –∑–∞—Ä–æ–±–ª—è—Ç–∏ –≥—Ä–æ—à—ñ, –¥—É–∂–µ –≤–æ–Ω—è—á–∏–π —Ñ—É—Ç–±–æ–ª—ñ—Å—Ç –∞–π–±–æ —Å—Ç–∞—Ä–∞—î—Å—è —Ç–∞ –æ–¥–Ω–æ—á–∞—Å–Ω–æ –∫—Ä–∞—Å–∞–≤–∞, –ª—é–±–∏–º–µ –π–æ–≥–æ –¥—É–∂–µ."},
{"_id":2,"author":"–ê—Ä—Ç—å–æ–º","avatar_url":"./images/bodya/art.png","review":"–ë–æ–≥–¥–∞–Ω –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π –ø–∞—Ü–∞–Ω –∑–Ω–∞—î –ª–æ–ø—Ç—É –ø–æ—Ä–∞–∑ —Ä—É–≥–Ω—É—Ç–∏ –ø–æ-–ª—é–¥—Å—å–∫–∏ –ø–æ—Ä–∞–∑ –Ω–µ—Ç, —ñ –Ω–µ –ø–æ—Ä–∞–∑, –ø–∞–∫ —à–æ —â–µ–º –≥–æ–¥–µ–Ω —É–ø—É–≤—ñ—Å—Ç–∏ –∫—É—á–µ—Ä—è–≤–∏–π —Ö—É–π–∏–∫ –±—ñ–≥–∞—Ç —Å–∫–∞—á–µ –º–∞—Ç—é–∫–∞—î—Å—è –ª—é–±–∏—Ç –±–µ–±—ñ –¥–∂–æ–Ω–æ–≤–∏ —É –≥–∞—Ç—å–æ—Ö –¥–∞—Ç–∏ –¥–∂–∞–∑—É –º—É –∫–∞–π—Ñ–∞ —Ç–∞–π —É—Å—å–æ, —â–µ –¥—É–∂–µ –º–Ω–æ–≥–æ –ø–∏–∑–¥–∏—Ç, —Å—è–∫ —Ç—ñ–ø–∞: –Ω–æ —è –≥–æ –¥—É–∂–µ –ª—é–±–ª—é —ñ—Ç–∞–∫ ¬´–Ω–∞ –∑–∞–º–µ—Ç–∫—É¬ª - –Ω–æ –Ω–µ —É—Å–µ‚òùüèª."},
{"_id":3,"author":"–ü–∞—à–∞","avatar_url":"./images/bodya/pasha.png","review":"–ö—Ä–∏–ø—Ç–æ—ñ–Ω–≤–µ—Å—Ç–æ—Ä, —Ñ—ñ–ª–∞–Ω—Ç—Ä–æ–ø, –º—ñ–ª—å–π–æ–Ω–µ—Ä, crypto enthusiast —ñ –ø—Ä–æ—Å—Ç–æ –ë–æ–≥–¥–∞–Ω –ì—Ä–∏—á–∫–∞. –§–∞—É–Ω–¥–µ—Ä $ARB, –∫–æ–ª –±—É–≤ –¥–∞–Ω, —É–∂–µ –æ—Ç–∫—É–ø–∏–≤ –Ω–∞ —Ñ—É–ª–ª –±–∞–ª—ñ–∫, –¥—è–∫—É—é –±–æ—Å—Å!"},
{"_id":4,"author":"–¢–æ–ª—ñ–∫","avatar_url":"./images/bodya/tolik.jpeg","review":"–ë–æ–¥—å–∫–∞ —Ö–∞—Ä–æ—à–∏–π –∞–ª–µ –¥—É–∂–µ –∫—Ä—É—Ç–∏–π –Ω–∞ —Å–ª–æ–≤–∞—Ö –∞ –∫–æ–ª–∏ –¥–æ –¥—ñ–ª–∞ —Ç–∞ –≤—Å—å–æ –∞ —Ç–∞–∫ —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–∏–π,–¥–æ–±—Ä–∏–π –∫—Ä–∞—Å–∞–≤—á–∏–∫ –ª–∏—à –¥—É–∂–µ —Å—è –≤–∏–¥—î–ª—É—îü´∂üèª"},
{"_id":5,"author":"–ê–º–µ–ª—ñ–∫–∞","avatar_url":"./images/bodya/amel.png","review":"–ß–µ—Å–Ω–æ –∫–∞–∂—É—á–∏ –ë–æ–¥—è —Å–∞–º–∏–π –≥–∞—Ä–∞—á–∏–π –ø–∞—Ä–µ–Ω—å —è–∫–æ–≥–æ —è –∫–æ–ª–∏ –ª—ñ–±–æ –≤–∏–¥—ñ–ª–∞, –∞–∂ –±–∏ —É–Ω —É–≤–∞–ª–∏–≤ —Å–≤–æ–≥–æ –±–µ–π–±—ñ –¥–∂–æ–Ω–∞, —è –± –Ω–µ –∑–¥–µ—Ä–∂–∞–ª–∞—Å—å, –¥—É–∂–µ –∑–∞ –Ω–∏–º —Å—É–º—É—é."},
{"_id":6,"author":"–¢–æ–Ω—ñ –°—Ç–∞—Ä–∫","avatar_url":"./images/bodya/Toni.jpeg","review":"–ë–∏–≤–∏–º —É—á–æ—Ä–∞ —É –≥–µ–¥–Ω–µ–ª–∏–∫ –∞ —Ç–∞–º –Ω—è —è–∫–∏–π—Å—å –≥–µ—Ü—ñ –∑–≤—ñ–¥–∞—Ç, —Ç–∏ –Ω–µ –∑–Ω–∞—î—à –∫–æ —Ç–æ –ë–æ–¥—è –ì—Ä–∏—á–∫–∞, —è –º—É –Ω–∞—Ä–∞–∑ —É–ø–æ–≤—ñ–≤: –≠, –≥–µ–Ω–∏–π, –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä, –ø–ª–µ–π–±–æ–π, —Ñ–∏–ª–∞–Ω—Ç—Ä–æ–ø! "}]
const BASE_URI = 'https://portfolio-js.b.goit.study/api/reviews';
const gallery = document.querySelector('.gallery');

async function getReviewsFromServer() {
  try {
    const { data } = await axios.get(BASE_URI);

    gallery.innerHTML = `<div class="swiper mySwiper">
      <p class = "review">REVIEW</p>
    <div id = "swiper-wrapper" class="swiper-wrapper">
       ${reviews
         .map(
           ({ author, avatar_url, review }) => `
           <div class="swiper-slide">
            <div class="gallery-item">
              <img src="${avatar_url}" class="gallery-image" alt="${author}"/>
                <div class="author">${author}</div>
              <p class="review">${review}</p>
            </div>
          </div>
          `
         )
         .join('')}
    </div>
    <div><button id = "swiper-button-next" class="swiper-button-next">
  <svg>
    <use href="${arrowRightIcon}#icon-arrow-right"></use>
  </svg>
</button></div>

    <div><button id = "swiper-button-prev" class="swiper-button-prev">
  <svg>
    <use href="${arrowLeftIcon}#icon-arrow-left"></use>
  </svg>
</button></div>

  </div>`;

    new Swiper('.mySwiper', {
      speed: 1000,
      slidesPerView: 1,
      spaceBetween: 16,
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      keyboard: true,
      mousewheel: true,
      slidesPerView: 1,
      breakpoints: {
        320: {
          slidesPerView: 1,
          spaceBetween: 16,
        },
        768: {
          slidesPerView: 2,
          spaceBetween: 16,
        },

        1440: {
          slidesPerView: 4,
          spaceBetween: 16,
        },
      },
    });
  } catch (error) {
    console.error('Error while fetching reviews:', error.message);
    throw error;
  }
}
getReviewsFromServer();
